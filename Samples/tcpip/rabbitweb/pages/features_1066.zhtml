<!-- This file shows how to display and access structures in ZHTML scripting.
     See the tags in the <FORM> ... </FORM> section. -->

<HTML>

<HEAD>
<TITLE>New RabbitWeb features for Dynamic C 10.66</TITLE>
</HEAD>

<BODY>
<H1>Structure Variables</H1>

<H2>Use of the json() command: JavaScript made easy!</H2>
<P>A ZHTML script can send an entire part of the RabbitWeb variable tree
using the json() function.  For example, if you put
<PRE>&lt;?z json($foo) ?&gt;</PRE>
then the value of foo and all its fields are recursively output as a JSON
(JavaScript Object Notation) string, like this:
<PRE><?z json($foo) ?></PRE>
<P>The following 3 lines are generated by JavaScript:</P>
<UL>
<SCRIPT>
// Note the trailing attribute ref is required since you always get an outer object
// 'wrapper', with the name of the variable as the first (and only) attribute.
foo = <?z json($foo) ?>.foo;
foo2 = <?z json($foo2) ?>.foo2;

document.write("<LI>foo.a + foo2.a = ", foo.a + foo2.a, "</LI>");
sum = 0;
nz = 0;
for (i = 0; i < foo.f.length; ++i) {
	sum += foo.f[i];
	if (foo.f[i] != 0)
		++nz;
}
document.write("<LI>sum(foo.f) = ", sum, "</LI>");
document.write("<LI>nonzero(foo.f) = ", nz, "</LI>");
</SCRIPT>
</UL>

<H2>Use of the with() and sizeof() statements</H2>
<P>The with() statement specifies a prefix for RabbitWeb variable references
following in the current nesting (brace) level.  This can save typing and
make it easier to avoid ZHTML errors.</P>
<P>For example, if foo has several fields (a, bar.b, bar.c, d) then the ZHTML
source can use with($foo) followed by abbreviated variable references such as
echo($.a) or echo($.bar.c) instead of echo($foo.a) or echo($foo.bar.c).</P>
<P>An initial '.' in the variable implies use of the with() prefix, and specifies
a 'relative' variable name.  Without the '.', the name is 'absolute' and must
be fully specified.</P>
<P>The sizeof() statement returns the appropriate text field size for a
RabbitWeb variable.  This sample uses it to determine the text field width
for several items.  If an integer variable is used, it assumes the largest
posible number of decimal digits (and sign) for that variable.  Float variables
always get 12 characters.  Strings get the maximum number of characters
possible for the string, which is the declared array size minus 1.
<FORM ACTION="/index.zhtml" METHOD="POST">

<TABLE>

<TR><TH>Variable name</TH><TH>Input field</TH><TH>Error message</TH></TR>

<!-- The following row in the table is for the foo.a variable -->
<TR>
<?z with($foo.a) ?>
<TD><?z varname($) ?>
<!-- Note that the structure variable is referred to just like in C, except for
     the '$' (or '@' if accessing the committed value) in front. -->
<?z if (error($)) { ?> (ERROR!) <?z } ?>
</TD>
<TD><INPUT TYPE="text" NAME="<?z varname($) ?>" SIZE=5 VALUE="<?z echo($) ?>"></TD>
<TD><?z echo(error($)) ?></TD>
</TR>

<!-- The following row in the table is for the foo.bar.b variable -->
<TR>
<?z with($foo.bar.b) ?>
<TD><?z varname($) ?>
<?z if (error($)) { ?> (ERROR!) <?z } ?>
</TD>
<TD><INPUT TYPE="text" NAME="<?z varname($) ?>" SIZE=<?z echo(sizeof($)) ?>
		VALUE="<?z echo($) ?>"></TD>
<TD><?z echo(error($)) ?></TD>
</TR>

<!-- The following row in the table is for the foo.bar.c variable -->
<TR>
<?z with($foo.bar.c) ?>
<TD><?z varname($) ?>
<?z if (error($)) { ?> (ERROR!) <?z } ?>
</TD>
<TD><INPUT TYPE="text" NAME="<?z varname($) ?>" SIZE=<?z echo(sizeof($)) ?> VALUE="<?z echo($) ?>"></TD>
<TD><?z echo(error($)) ?></TD>
</TR>

<!-- The following row in the table is for the foo.d variable -->
<TR>
<?z with($foo) ?>
<TD>foo.d
<?z if (error($.d)) { ?>
   (ERROR!)
<?z } ?>
</TD>
<TD>
<INPUT TYPE="text" NAME="foo.d" SIZE=<?z echo(sizeof($.d)) ?>
		 VALUE="<?z echo($.d) ?>">
</TD>
<TD><?z echo(error($.d)) ?></TD>
</TR>

<!-- The following row in the table is for the foo.e variable -->
<TR>
<TD>foo.e</TD>
<TD><INPUT TYPE="text" NAME="foo.e" SIZE=<?z echo(sizeof($.e)) ?>
		VALUE="<?z echo($.e) ?>"></TD>
<TD><?z echo(error($.e)) ?></TD>
</TR>


<?z with($foo2) ?>

<!-- The following row in the table is for the foo2.a variable -->
<TR>
<TD><?z varname($.a) ?>
<?z if (error($.a)) { ?>
   (ERROR!)
<?z } ?>
</TD>
<TD>
<INPUT TYPE="text" NAME="<?z varname($.a) ?>" SIZE=5 VALUE="<?z echo($.a) ?>">
</TD>
<TD><?z echo(error($.a)) ?></TD>
</TR>

<!-- The following row in the table is for the foo2.bar.b variable -->
<TR>
<TD><?z varname($.bar.b) ?>
<?z if (error($.bar.b)) { ?>
   (ERROR!)
<?z } ?>
</TD>
<TD>
<INPUT TYPE="text" NAME="<?z varname($.bar.b) ?>" SIZE=5 VALUE="<?z echo($.bar.b) ?>">
</TD>
<TD><?z echo(error($.bar.b)) ?></TD>
</TR>

<!-- The following row in the table is for the foo2.bar.c variable -->
<TR>
<TD><?z varname($.bar.c) ?>
<?z if (error($.bar.c)) { ?>
   (ERROR!)
<?z } ?>
</TD>
<TD>
<INPUT TYPE="text" NAME="<?z varname($.bar.c) ?>" SIZE=10 VALUE="<?z echo($.bar.c) ?>">
</TD>
<TD><?z echo(error($.bar.c)) ?></TD>
</TR>

<!-- The following row in the table is for the foo2.d variable -->
<TR>
<TD><?z varname($.d) ?>
<?z if (error($.d)) { ?>
   (ERROR!)
<?z } ?>
</TD>
<TD>
<INPUT TYPE="text" NAME="<?z varname($.d) ?>" SIZE=1 VALUE="<?z echo($.d) ?>">
</TD>
<TD><?z echo(error($.d)) ?></TD>
</TR>

</TABLE>

<P>
<INPUT TYPE="submit" VALUE="Submit">
<INPUT TYPE="reset" VALUE="Reset">
</FORM>

</BODY>
</HTML>

