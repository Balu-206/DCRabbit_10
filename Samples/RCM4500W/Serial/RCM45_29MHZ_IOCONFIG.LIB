/*** BeginHeader */
#ifndef __RCM45_29MHZ_IOCONFIG_LIB
#define __RCM45_29MHZ_IOCONFIG_LIB
/*** EndHeader */

/* START LIBRARY DESCRIPTION ************************************************
RCM45_29MHZ_IOCONFIG.LIB
DESCRIPTION:
 This library was generated by the Rabbit 4000 I/O LIB Utility.
 If it is modified in any incorrect way it might not load properly.
 Usage:
 #use "RCM45_29MHZ_IOCONFIG.LIB"
 main()
 {
    serDEFconfig();
    ...
 }

SUPPORT LIBRARIES: none
END DESCRIPTION *************************************************************/

/*** BeginHeader  serDEFconfig */
void serDEFconfig();
void ClockCheck();
void SetupSerial();
#define DINBUFSIZE  127
#define DOUTBUFSIZE  127
#define SERD_TXPORT  PCDR
#define DDRIVE_TXD  0
#define SERD_RXPORT  PCDR
#define DDRIVE_RXD  1
#define EINBUFSIZE  127
#define EOUTBUFSIZE  127
#define SERE_TXPORT  PEDR
#define EDRIVE_TXD  6
#define SERE_RXPORT  PEDR
#define EDRIVE_RXD  7
#define FINBUFSIZE  127
#define FOUTBUFSIZE  127
#define SERF_TXPORT  PCDR
#define FDRIVE_TXD  2
#define SERF_RXPORT  PCDR
#define FDRIVE_RXD  3
/*** EndHeader */

/* START FUNCTION DESCRIPTION ***********************************************
serDEFconfig                <RCM45_29MHZ_IOCONFIG.LIB>
void serEFconfig(void);

Configures serial ports D, E, and F for use with RCM4500W series boards on an
RCM4500W prototyping board.  All three serial ports are configured to use DMA.

Serial port D is configured to use PC1 and PC0 (the defaults). 

Serial port E is configured to use PE7 and PE6.

Serial port F is configured to use PC3 and PC2, overriding the default serial
port C assignments.
END DESCRIPTION *************************************************************/

void ClockCheck()
{
   if (freq_divider != 48) // 29.49 MHz, not doubled
   {
      exception(-ERR_LIBCLOCKSPEED);
   }
}

void SetupSerial()
{
   serDopen(19200L);
   serDdmaOn(DMA_CHANNEL_ANY, DMA_CHANNEL_ANY);
   serEopen(19200L);
   WrPortI(SECR,&SECRShadow, 0x20);  
   serEdmaOn(DMA_CHANNEL_ANY, DMA_CHANNEL_ANY);
   serFopen(19200L);
   serFdmaOn(DMA_CHANNEL_ANY, DMA_CHANNEL_ANY);
}

void serDEFconfig()
{
   ClockCheck();
   // The following differ from BIOS settings
   SetupSerial();
   WrPortI(PCALR,&PCALRShadow,0x30);     // Serial Port F
   WrPortI(PCFR,&PCFRShadow,0xC5);     // Serial Port D
   WrPortI(PEAHR,&PEAHRShadow,0x30);     // Serial Port E
   WrPortI(PEDDR,&PEDDRShadow,0x40);     // Serial Port E
   WrPortI(PEFR,&PEFRShadow,0x40);     // Serial Port E
}

// The following are used by the configuration utility
// Restore(SDDLR, 0x5F)      // Serial Port D
// Restore(SECR, 0x20)      // Serial Port E
// Restore(SEDLR, 0x5F)      // Serial Port E
// Restore(SFDLR, 0x5F)      // Serial Port F
// Restore(APID, 0x01)      // Serial Port D
// Restore(APIE, 0x01)      // Serial Port E
// Restore(APIF, 0x01)      // Serial Port F
// Restore(DINBF, 0x7F)      // Serial Port D
// Restore(DOUTBF, 0x7F)      // Serial Port D
// Restore(EINBF, 0x7F)      // Serial Port E
// Restore(EOUTBF, 0x7F)      // Serial Port E
// Restore(FINBF, 0x7F)      // Serial Port F
// Restore(FOUTBF, 0x7F)      // Serial Port F
// Restore(SDDMA, 0x01)      // Serial Port D
// Restore(SEDMA, 0x01)      // Serial Port E
// Restore(SFDMA, 0x01)      // Serial Port F
// Restore(USEPD, 0x01)      // Serial Port D
// Restore(USEPE, 0x01)      // Serial Port E
// Restore(USEPF, 0x01)      // Serial Port F

/*** BeginHeader */
#endif
/*** EndHeader */
//checksum:8A0D