/*** BeginHeader */
#ifndef __RCM54XXW_LIB
#define __RCM54XXW_LIB

#if !(RCM5400W_SERIES) || _DC_MB_TYPE_ != 0
	#fatal "RCM54XXW.LIB only supports RCM54XXW series boards."
#endif

/*** EndHeader */

/* START LIBRARY DESCRIPTION *********************************************
RCM54XXW.LIB

DESCRIPTION:	This is a sample library only.

					Use with RCM54XXW series controllers and prototyping boards.
					Add or modify functions to suit your applications.

               RCM5400W	Standard Setup:
               74MHz R5000, 512K flash, 512K+512K SRAM, 802.11b/g wireless
               1MByte serial flash(user-accessible)

               RCM5450W	Standard Setup:
               74MHz R5000, 1M flash, 1M+512K SRAM, 802.11b/g wireless
               2MByte serial flash(user-accessible)


REVISION HISTORY:
23-Apr-2007 ek	Created RCM54XXW.LIB from RCM44XX.LIB.

END DESCRIPTION **********************************************************/


/*** BeginHeader */
//////////
// required for A/D conversion operations
//	make changes below to match your application
//////////



#define DEVELOPMENT_BOARD  // Indicate development board LIB being used

/*** EndHeader */


/*** BeginHeader __brdinitflag */
extern int __brdinitflag;
/*** EndHeader */

int __brdinitflag;				//Board init function flag

/*** BeginHeader brdInit */

void brdInit();

/*** EndHeader */

/* START FUNCTION DESCRIPTION ********************************************
brdInit						<RCM54XXW.LIB>

SYNTAX:			void brdInit (void);

DESCRIPTION:	This function initializes parallel ports A through E for
					RCM54XXW series core modules running on an RCM4000 series
               prototyping board.

               Default I/O port configuration:
               -------------------------------
					The brdInit function is setup to a default I/O configuration
               for the RCM5400W and the standard prototyping board.

               Note:
					-----
               This function is intended for demonstration purposes only
					and can be modified for your applications.

PARAMETER:    	None

RETURN VALUE:	None

-------------------------------------------------------------------------------
   General information and I/O initialization when using an RCM54XXW series
   core module on an RCM54XXW prototpying board
-------------------------------------------------------------------------------

	Summary of initialization
	-------------------------
   1. I/O port pins are configured for protoboard operation.
	2.	Unused configurable I/O are set as outputs.
	3. RS232 is not enabled.
   4. LED's are off.
	5. Slave port disabled.

Pin   Port  Function                      I/O      I/O State
====  ====  ===========================   ======   ============================
8     PA0   Not used                      Output   Low
9     PA1   Not used                      Output   Low
10    PA2   Not used                      Output   Low
11    PA3   Not used                      Output   Low
12    PA4   Not used                      Output   Low
13    PA5   Not used                      Output   Low
14    PA6   Not used                      Output   Low
15    PA7   Not used                      Output   Low

16    PB0   Serial Flash SCLK 				Output   High
17    PB1   CLKA - Programming Port       Output   High
18    PB2   LED DS2                       Output   High (off)
19    PB3   LED DS3                       Output   High (off)
20    PB4   S2                            Input    Pulled-up protoboard
21    PB5   S3                            Input    Pulled-up protoboard
22    PB6   Not Used                      Output   High
23    PB7   Not Used                      Output   High

24    PC0   TXD - RS232                   Output   High
25    PC1   RXD - RS232                   Input    Pulled-up protoboard
26    PC2   TXC - RS232                   Output   High
27    PC3   RXC - RS232                   Input    Pulled-up protoboard
28    PC4   Serial Flash SDO 	  		      Output   High
29    PC5   Serial Flash SDI 	  		      Input    Pulled-up on core
30    PC6   TXA - Programming port        Output   High when not driven
31    PC7   RXA - Programming port        Input    Pulled-up on core

40    PD0   Not Used                      Output   High
41    PD1   Not Used                      Output   High
42    PD2   Not Used                      Output   High
43    PD3   Not Used                      Output   High
44    PD4   Not Used                      Output   High
45    PD5   Not Used                      Output   High
46    PD6   Not Used                      Output   High
47    PD7   Not used                      Output   High

32    PE0   Not used                      Output   High
33    PE1   Not used                      Output   High
34    PE2   Not used                      Output   High
35    PE3   Not used                      Output   High
36    PE4   Not used                      Output   High
37    PE5   Not used            				Output   High
38    PE6   Not used   							Output   High
39    PE7   Not used                      Output   High

END DESCRIPTION **********************************************************/

__nodebug
void brdInit()
{
	#GLOBAL_INIT {__brdinitflag  = FALSE;}

	__brdinitflag = TRUE;

	/////////////////////////////////////////////////////////////////////////
	// Configure Port A
   /////////////////////////////////////////////////////////////////////////
	WrPortI(PADR, &PADRShadow, 0x00);		//set to output all low
	WrPortI(SPCR, &SPCRShadow, 0x84);		//sets all bits to output

   /////////////////////////////////////////////////////////////////////////
	// Configure Port B -- Leave PB1 untouched (used for other purpose)
   /////////////////////////////////////////////////////////////////////////
   WrPortI(PBDR,  &PBDRShadow,  (PBDRShadow & 0xCF) | 0xCD); // set outputs
   																			 // to high
   WrPortI(PBDDR, &PBDDRShadow, (PBDDRShadow & 0xCF) | 0xCD); // set inputs and
   																			  // outputs

   /////////////////////////////////////////////////////////////////////////
   // Configure Port C -- Leave PC4-PC7 untouched (used for other purposes)
   /////////////////////////////////////////////////////////////////////////
	WrPortI(PCFR,  &PCFRShadow,  PCFRShadow  & 0xF0); // no special functions
	WrPortI(PCDCR, &PCDCRShadow, PCDCRShadow & 0xF0); // clear all bits to
                                                     // drive high and low
	WrPortI(PCDR,  &PCDRShadow,  (PCDRShadow  & 0xFA) | 0x05); // set bits
	WrPortI(PCDDR, &PCDDRShadow, (PCDDRShadow & 0xFA) | 0x05); // set inputs
                                                              // and outputs

   /////////////////////////////////////////////////////////////////////////
	// Configure Port D
   /////////////////////////////////////////////////////////////////////////
	WrPortI(PDCR,  &PDCRShadow,  0x00);	// clear all bits to pclk/2
	WrPortI(PDFR,  &PDFRShadow,  0x00);	// No special functions
	WrPortI(PDDCR, &PDDCRShadow, 0x00);	// clear all bits to drive high and low
	WrPortI(PDDR,  &PDDRShadow,  0xFF);	// set all bits high
	WrPortI(PDDDR, &PDDDRShadow, 0xFF);	// set all bits to output

   /////////////////////////////////////////////////////////////////////////
	// Configure Port E
   /////////////////////////////////////////////////////////////////////////
	WrPortI(PECR,  &PECRShadow,  0x00);	// clear all bits to pclk/2
	WrPortI(PEFR,  &PEFRShadow,  0x00);	// No special functions
	WrPortI(PEDCR, &PEDCRShadow, 0x00);	// clear all bits to drive high and low
	WrPortI(PEDR,  &PEDRShadow,  0xFF);	// set all bits high
	WrPortI(PEDDR, &PEDDRShadow, 0xFF);	// set all bits to output

}

/*** BeginHeader */
#endif
/*** EndHeader */