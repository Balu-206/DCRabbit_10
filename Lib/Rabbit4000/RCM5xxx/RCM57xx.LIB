/*
   Copyright (c) 2015, Digi International Inc.

   Permission to use, copy, modify, and/or distribute this software for any
   purpose with or without fee is hereby granted, provided that the above
   copyright notice and this permission notice appear in all copies.

   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
/*** BeginHeader */
#ifndef __RCM57XX_LIB
#define __RCM57XX_LIB

#if !RCM5700_SERIES
   #fatal "RCM57XX.LIB only supports RCM57XX series boards."
#endif

/*** EndHeader */

/* START LIBRARY DESCRIPTION *********************************************
RCM57XX.LIB

DESCRIPTION:   This is a sample library only.

               Use with RCM57XX series controllers and interface boards.
               Add or modify functions to suit your applications.

               RCM5700 Standard Setup:
               50MHz R5000, 1M Flash, 128k internal SRAM, 100BASE-T Ethernet


END DESCRIPTION **********************************************************/


/*** BeginHeader */
#define DEVELOPMENT_BOARD  // Indicate development board LIB being used
/*** EndHeader */


/*** BeginHeader __brdinitflag */
extern int __brdinitflag;
/*** EndHeader */
int __brdinitflag;            //Board init function flag

/*** BeginHeader brdInit */
void brdInit(void);
/*** EndHeader */

/* START FUNCTION DESCRIPTION ********************************************
brdInit                       <RCM57XX.LIB>

SYNTAX:        void brdInit (void);

DESCRIPTION:   This function initializes parallel ports A through E for
               RCM57XX series core modules running on an RCM57XX series
               interface board.

               Default I/O port configuration:
               -------------------------------
               The brdInit function sets up a default I/O configuration
               for the RCM5700 and the standard interface board.

               Note:
               -----
               This function is intended for demonstration purposes only
               and can be modified for your applications.

PARAMETER:     None

RETURN VALUE:  None

   -----------------------------------------------------------------------
   General information and I/O initialization when using an RCM57XX series
   core module on an RCM57XX interface board.
   -----------------------------------------------------------------------

   Summary of initialization
   -------------------------
   1. I/O port pins are configured for interface board operation.
   2. Unused configurable I/O are set as outputs.
   3. LEDs are off.
   4. Slave port disabled.

   Pins B1, C6-C7, D7 and E4 are separately configured by the BIOS and
   associated libraries.

   Note that parallel port H is not connected to the I/O edge connector,
   so is not available for use as a general purpose I/O port.

Pin  Port  Function                         I/O     I/O State
===  ====  ===============================  ======  ======================
35   PA0   Not used                         Output  High
36   PA1   Not used                         Output  High
37   PA2   Not used                         Output  High
38   PA3   Not used                         Output  High
39   PA4   Not used                         Output  High
40   PA5   Not used                         Output  High
41   PA6   Not used                         Output  High
42   PA7   Not used                         Output  High

27   PB0   RCM5700/10: Not used             Output  High
           RCM5750/60: CLKB - Serial flash  Output  Setup by sflash driver
46   PB1   CLKA - Programming port          Output  High when not driven
29   PB2   Not used                         Output  High
30   PB3   Not used                         Output  High
31   PB4   Not used                         Output  High
32   PB5   Not used                         Output  High
33   PB6   Not used                         Output  High
34   PB7   Not used                         Output  High

21   PC0   Not used                         Output  High
22   PC1   Not used                         Output  High
23   PC2   Not used                         Output  High
24   PC3   Not used                         Output  High
25   PC4   Not used                         Output  High
26   PC5   Not used                         Output  High
48   PC6   TXA - Programming port           Output  Driven
50   PC7   RXA - Programming port           Input   Pulled-up on core

17   PD0   LED DS1                          Output  High (off)
18   PD1   Switch S1                        Input   Pulled-up on iface brd
19   PD2   Not used                         Output  High
20   PD3   Not used                         Output  High
NC   PD4   RCM5700/10: Not used             Output  High
           RCM5750/60: TXB - Serial flash   Output  Setup by sflash driver
NC   PD5   RCM5700/10: Not used             Output  High
           RCM5750/60: RXB - Serial flash   Input   Setup by sflash driver
NC   PD6   RCM5700/10: Not used             Output  High
           RCM5750/60: /CS - Serial flash   Output  Setup by sflash driver
NC   PD7   10/100                           Output  Driven

09   PE0   Not used                         Output  High
10   PE1   Not used                         Output  High
11   PE2   Not used                         Output  High
12   PE3   Not used                         Output  High
NC   PE4   RESET_PHY                        Output  Low when not driven
13   PE5   Not used                         Output  High
14   PE6   Not used                         Output  High
15   PE7   Not used                         Output  High

NC   PH0   Not available                    Output  High
NC   PH1   Not available                    Output  High
NC   PH2   Not available                    Output  High
NC   PH3   Not available                    Output  High
NC   PH4   Not available                    Output  High
NC   PH5   Not available                    Output  High
NC   PH6   Not available                    Output  High
NC   PH7   Not available                    Output  High
END DESCRIPTION *********************************************************/

__nodebug
void brdInit(void)
{
   #GLOBAL_INIT {__brdinitflag  = FALSE;}

   /////////////////////////////////////////////////////////////////////////
   // Configure Port A
   /////////////////////////////////////////////////////////////////////////
   WrPortI(PADR, &PADRShadow, 0xFF);      // set to output all high
   WrPortI(SPCR, &SPCRShadow, 0x84);      // sets pins to all outputs

   /////////////////////////////////////////////////////////////////////////
   // Configure Port B -- Leave PB1 untouched (used for other purposes)
   //                     RCM5750/60 only: PB0 set up by serial flash driver
   /////////////////////////////////////////////////////////////////////////
#if _BOARD_TYPE_ == RCM5700
	// RCM5700/10
   WrPortI(PBDR,  &PBDRShadow,  RdPortI(PBDR)  | 0xFD); // set outputs to high
   WrPortI(PBDDR, &PBDDRShadow, RdPortI(PBDDR) | 0xFD); // set pins to output
#elif _BOARD_TYPE_ == RCM5750
	// RCM5750/60
   WrPortI(PBDR,  &PBDRShadow,  RdPortI(PBDR)  | 0xFC); // set outputs to high
   WrPortI(PBDDR, &PBDDRShadow, RdPortI(PBDDR) | 0xFC); // set pins to output
#else
	#fatal "Unsupported _BOARD_TYPE_!"
#endif

   /////////////////////////////////////////////////////////////////////////
   // Configure Port C -- Leave PC6 and PC7 untouched (used for other purposes)
   /////////////////////////////////////////////////////////////////////////
   WrPortI(PCFR,  &PCFRShadow,  RdPortI(PCFR)  & 0xC0); // no special functions
                                                        //  except PC6 and PC7
   WrPortI(PCDCR, &PCDCRShadow, RdPortI(PCDCR) & 0xC0); // clear bits to drive
                                                        //  high and low
   WrPortI(PCDR,  &PCDRShadow,  RdPortI(PCDR)  | 0x3F); // set outputs high
   WrPortI(PCDDR, &PCDDRShadow, RdPortI(PCDDR) | 0x3F); // set inputs and
                                                        //  outputs

   /////////////////////////////////////////////////////////////////////////
   // Configure Port D -- Leave PD7 untouched (used for other purposes)
   //                     RCM5750/60 only: PD4,5,6 set up by serial flash driver
   /////////////////////////////////////////////////////////////////////////
   WrPortI(PDCR,  &PDCRShadow,  RdPortI(PDCR)  & 0x80);  // clear bits to pclk/2
   WrPortI(PDDCR, &PDDCRShadow, RdPortI(PDDCR) & 0x80);  // clear bits to drive
                                                         //  high and low
   WrPortI(PDDR,  &PDDRShadow,  RdPortI(PDDR)  | 0x7D);  // set outputs high
#if _BOARD_TYPE_ == RCM5700
	// RCM5700/10
	WrPortI(PDFR,  &PDFRShadow,  RdPortI(PDFR)  & 0x80);	// no special functions
	WrPortI(PDDDR, &PDDDRShadow, RdPortI(PDDDR) & 0xFD | 0x7D);	// set up I/Os
#elif _BOARD_TYPE_ == RCM5750
	// RCM5750/60
	WrPortI(PDFR,  &PDFRShadow,  RdPortI(PDFR)  & 0xF0);	// sflash on PD4,5,6
	WrPortI(PDDDR, &PDDDRShadow, RdPortI(PDDDR) & 0xFD | 0x0D);	// set up I/Os
#else
	#fatal "Unsupported _BOARD_TYPE_!"
#endif

   /////////////////////////////////////////////////////////////////////////
   // Configure Port E -- Leave PE4 untouched (used for other purposes)
   /////////////////////////////////////////////////////////////////////////
   WrPortI(PECR,  &PECRShadow,  RdPortI(PECR)  & 0x10);  // clear bits to pclk/2
   WrPortI(PEFR,  &PEFRShadow,  RdPortI(PEFR)  & 0x10);  // no special function
   WrPortI(PEDCR, &PEDCRShadow, RdPortI(PEDCR) & 0x10);  // clear bits to drive
                                                         //  high and low
   WrPortI(PEDR,  &PEDRShadow,  RdPortI(PEDR)  | 0xEF);  // set outputs high
   WrPortI(PEDDR, &PEDDRShadow, RdPortI(PEDDR) | 0xEF);  // set bits to output

   /////////////////////////////////////////////////////////////////////////
   // Configure Port H
   /////////////////////////////////////////////////////////////////////////
   WrPortI(PHFR,  &PHFRShadow,  0x00);  // no special functions
   WrPortI(PHDCR, &PHDCRShadow, 0x00);  // clear all bits to drive high and low
   WrPortI(PHDR,  &PHDRShadow,  0xFF);  // set all bits high
   WrPortI(PHDDR, &PHDDRShadow, 0xFF);  // set all bits to output

   __brdinitflag = TRUE;
}

/*** BeginHeader */
#endif
/*** EndHeader */