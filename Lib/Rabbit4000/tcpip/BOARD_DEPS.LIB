/*
 *    board_deps.lib
 *    Copyright (C) Rabbit Semiconductor, Inc. All rights reserved.
 *
 * This library contains configuration items which are automatically
 * determined, based on the target board type.
 */

/*** BeginHeader */
#ifndef BOARD_DEPS_LIB
#define BOARD_DEPS_LIB

/*******************************************************************************
	This section examines the board type, and selects network driver parameters.

	*CUSTOM*
	Note: To add a new driver library (let's call it XXX.LIB), for a new board
	called e.g. MYBOARD, write the following block of macros:

	 #elif _BOARD_TYPE_ == MYBOARD
	   #define XXX_PKTDRV_LIB "xxx.lib"
	   #define XXX_INIT_FUNC pd_setup_MYBOARD		// a function in xxx.lib
	   #define XXX_INIT_FLAGS  ...		// Any other macros required by xxx.lib

	This macro block should be inserted somewhere in the list of #elif...#elif
	conditionals.

	Note that there is no NEED to base selection on _BOARD_TYPE_.  Some drivers
	may not be associated with any board type in particular; these would require
	the user to explicitly include support by e.g. defining a USE_XXX macro.
*******************************************************************************/

// We only do the following if network needed and auto-configuration enabled.
#if (USE_ETHERNET||USE_PPPOE||USE_WIFI) && !defined DISABLE_ETHERNET_AUTOCONF

	/****************************************************************************
	 Rabbit 4000 / 5000 / 6000 inbuilt DMA Ethernet or WiFi...
	****************************************************************************/

	#if R6000TEST_SERIES || RCM6600W_SERIES || RCM6700_SERIES
		#ifndef PKT_POOL_IPSET
			#define PKT_POOL_IPSET              2
		#endif
		#if WIFI_ONBOARD
			#if RCM6700_SERIES
				#fatal "The RCM6700 board family doesn't support WiFi."
			#endif
			#define WIFIG_PKTDRV_LIB            "wifig.lib"
			#define WIFI_DEFAULT_TX_POWER_LEVEL (_wifi_macParams.tx_power_max - 2)
		#endif
		#if ETHERNET_ONBOARD
			#define DMAETH_PKTDRV_LIB           "dmaeth100.lib"
			#ifndef DMAETH100_RXCHAN
				#define DMAETH100_RXCHAN         6
			#endif
			#ifndef DMAETH100_TXCHAN
				#define DMAETH100_TXCHAN         7
			#endif
		#endif

	#elif RCM5700_SERIES
		#define DMAETH_PKTDRV_LIB               "dmaeth100.lib"
		#define PKT_POOL_IPSET                  2

		#define DMAETH100_RXCHAN                6
		#define DMAETH100_TXCHAN                7

		// PHY reset time in ms., part-dependent - using ICS1893BK
		#define DMAETH100_RESET_TIME            54

		#ifndef FPGA_TEST
			// Reset port function register
			#define DMAETH100_RESET_PXFR         PEFR
			#define DMAETH100_RESET_PXFR_SHADOW  PEFRShadow
			#define DMAETH100_RESET_BIT          4

			// Reset port data register
			#define DMAETH100_RESET_PXDR         PEDR
			#define DMAETH100_RESET_PXDR_SHADOW  PEDRShadow
			#define DMAETH100_RESET_BITVAL       1		// value to assert low

			// Reset port data drive control register (open drain or not)
			#define DMAETH100_RESET_PXCR         PEDCR
			#define DMAETH100_RESET_PXCR_SHADOW  PEDCRShadow
			#define DMAETH100_RESET_DCBITVAL     0		// value to assert low

			// Reset port data direction register
			#define DMAETH100_RESET_PXDDR        PEDDR
			#define DMAETH100_RESET_PXDDR_SHADOW PEDDRShadow

			// AMDIX port function register  (to auto-detect cable type MDI/MDIX)
			#define DMAETH100_AMDIX_PXDR         GOCR
			#define DMAETH100_AMDIX_PXDR_SHADOW  GOCRShadow
			#ifndef DMAETH100_PXDR_AMDIX_EN
				#define DMAETH100_PXDR_AMDIX_EN   1
			#endif
			#define DMAETH100_AMDIX_PXDR_MASK 0xFC
			#if DMAETH100_PXDR_AMDIX_EN
				#define DMAETH100_AMDIX_BITS      3		// bits 0 & 1 set BUFEN high
			#else
				#define DMAETH100_AMDIX_BITS      2		// bit 1 sets BUFEN low
			#endif
		#endif

	#elif RCM4000_SERIES || BL4S100_SERIES
		#define DMAETH_PKTDRV_LIB      "dmaeth.lib"
		#define PKT_POOL_IPSET         2
		#define DMAETH_ENAB_ACTLINK			// Enable PE5/7 as activity/link lights
		#ifndef DMAETH_TXCHAN
			#define DMAETH_TXCHAN       6
		#endif
		#ifndef DMAETH_RXCHAN
			#define DMAETH_RXCHAN       7
		#endif

		#if BL4S100_SERIES
			#ifndef DMAETH_INIT_NACR
				#define DMAETH_INIT_NACR 0xC6	// ethernet clock from system clock/2
			#endif
		#endif

	/****************************************************************************
	 WiFi chipset...
	****************************************************************************/

	#elif RCM4400W_SERIES || RCM5400W_SERIES || RCM5600W_SERIES
		#define PKT_POOL_IPSET                 2
		#define WIFIG_PKTDRV_LIB               "wifig.lib"
		#if RCM4400W_SERIES
			#define RABBIT_EARS
			#define _WIFI_BONLY
			#define WIFI_DEFAULT_TX_POWER_LEVEL (_wifi_macParams.tx_power_max/2+1)
		#else
			#if ETH_MTU > 1489
				#fatal "ETH_MTU must be 1489 or less for Rabbit 5000 WiFi boards!"
			#endif
			#define WIFI_DEFAULT_TX_POWER_LEVEL (_wifi_macParams.tx_power_max - 2)
		#endif
		#ifdef WPA_USE_EAP
			#if _BOARD_TYPE_ == RCM4400W
				#fatal "WPA_USE_EAP is not supported on the RCM4400W."
			#elif _BOARD_TYPE_ == RCM5400W
				#fatal "WPA_USE_EAP is not supported on the RCM5400W."
			#endif
		#endif

	/****************************************************************************
	 ASIX variants...
	****************************************************************************/

	#elif RCM4200_SERIES || RCM4300_SERIES
		#define ASIX_PKTDRV_LIB  "asix.lib"
		#define ASIX_INIT_FUNC   pd_setup_asix
		#define ASIX_INIT_FLAGS  0
		#if (CLOCK_DOUBLED == 1)				// 58Mhz R4000
			#define ASIX_WAITS    0x89			// 3 waits, always use memory bus
		#else
			#define ASIX_WAITS    0xb9			// 1 wait, always use memory bus
		#endif
		#define ASIX_WRIO        0x4200
		#define ASIX_RESPORT     0x00
		#define ASIX_RESSHAD     PDDRShadow	// this variant needs no real RESSHAD
		#define ASIX_RESMASK     0x00
		#define _ASIX
		#define ASIX_RX_BUF_Stop 0x80
		#define _AX88796B
		#define ASIX_RDIO        0x4200

 #endif

#endif //(USE_ETHERNET||USE_PPPOE||USE_WIFI)&&!defined DISABLE_ETHERNET_AUTOCONF

/*******************************************************************************
  End of board-specific settings.
*******************************************************************************/

#endif	// BOARD_DEPS_LIB
/*** EndHeader */